
        String[] items = result.split(" ");
        List<String> itemList = Arrays.asList(items);
        System.out.println(itemList.size());
      //  System.out.println(itemList.get(1));
        System.out.println(items[2]);
        //tc.setText(itemList.get(1));
        //isim.setText(itemList.get(2));
        //sicil.setText(itemList.get(3));
        //tel.setText(itemList.get(4));





package com.example.aylin.menulogin;

import org.ksoap2.SoapEnvelope;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapSerializationEnvelope;
import org.ksoap2.transport.HttpTransportSE;

import java.util.ArrayList;

/**
 * Created by aylin on 26.04.2016.
 */
public class BaşvuruCallSoap {
    ArrayList<String> x=new ArrayList<String>();
    public final String SOAP_ACTION = "http://tempuri.org/Get_Basvurular_Y";

    public  final String OPERATION_NAME = "Get_Basvurular_Y";

    public  final String WSDL_TARGET_NAMESPACE = "http://tempuri.org/";

    public  final String SOAP_ADDRESS = "http://213.14.73.146:82/gelincik/Basvurular_WebService.asmx";
    public BaşvuruCallSoap()
    {
    }
    public String CallBasvuru(String a,String b)
    {
        SoapObject request = new SoapObject(WSDL_TARGET_NAMESPACE,OPERATION_NAME);


        SoapSerializationEnvelope envelope = new SoapSerializationEnvelope(
                SoapEnvelope.VER11);
        envelope.dotNet = true;

        envelope.setOutputSoapObject(request);

        HttpTransportSE httpTransport = new HttpTransportSE(SOAP_ADDRESS);
        Object response=null;
        Object response2=null;
        try
        {
            httpTransport.call(SOAP_ACTION, envelope);


            SoapObject primitive= (SoapObject) envelope.getResponse();
            if  (primitive != null) {
                System.out.println(primitive);
               /* SoapObject diffgram = (SoapObject) primitive.getProperty("diffgram");
                SoapObject NewDataSet = (SoapObject) diffgram.getProperty("DocumentElement");
                SoapObject RepInfo = (SoapObject) NewDataSet.getProperty("BASVURULARı");
                for (int i = 0; i < RepInfo.getPropertyCount(); i++) {
                    PropertyInfo info = new PropertyInfo();
                    RepInfo.getPropertyInfo(i, info);
                    System.out.println("repp...." + RepInfo.getProperty(i).toString());
                    x.add(RepInfo.getProperty(i).toString());*/

                }

              /*  //Adı

                response=x.get(2);
                response2=x;
                //sicil
                //response=x.get(3);
*/
            }

       // }
        catch (Exception exception)
        {
            response=exception.toString();
        }

        return response2.toString();
    }
}




  if  (primitive2 != null) {
response3="1";
              //  response2=primitive;
                SoapObject diffgram2 = (SoapObject) primitive2.getProperty("diffgram");
                System.out.println(primitive2+":eses");
               /* SoapObject NewDataSet = (SoapObject) diffgram.getProperty("DocumentElement");
                SoapObject RepInfo = (SoapObject) NewDataSet.getProperty("BASVURULARı");
                for (int i = 0; i < RepInfo.getPropertyCount(); i++) {
                    PropertyInfo info = new PropertyInfo();
                    RepInfo.getPropertyInfo(i, info);
                    System.out.println("repp...." + RepInfo.getProperty(i).toString());
                    basvuruList.add(RepInfo.getProperty(i).toString());

            }
                response2=basvuruList;*/
              /*  //Adı

                response=x.get(2);
                response2=x;
                //sicil
                //response=x.get(3);